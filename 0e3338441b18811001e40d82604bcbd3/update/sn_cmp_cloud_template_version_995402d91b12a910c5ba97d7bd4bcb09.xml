<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sn_cmp_cloud_template_version">
    <sn_cmp_cloud_template_version action="INSERT_OR_UPDATE">
        <attachment/>
        <body>{&#13;
  "AWSTemplateFormatVersion" : "2010-09-09",&#13;
  &#13;
  "Description" : "AWS CloudFormation Sample Template LAMP_Single_Instance: Create a LAMP stack using a single EC2 instance and a local MySQL database for storage. This template demonstrates using the AWS CloudFormation bootstrap scripts to install the packages and files necessary to deploy the Apache web server, PHP and MySQL at instance launch time. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",&#13;
  &#13;
  "Parameters" : {&#13;
      &#13;
    "KeyName": {&#13;
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",&#13;
      "Type": "AWS::EC2::KeyPair::KeyName",&#13;
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."&#13;
    },    &#13;
&#13;
    "DBName": {&#13;
      "Default": "MyDatabase",&#13;
      "Description" : "MySQL database name",&#13;
      "Type": "String",&#13;
      "MinLength": "1",&#13;
      "MaxLength": "64",&#13;
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",&#13;
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."&#13;
    },&#13;
&#13;
    "DBUser": {&#13;
      "NoEcho": "true",&#13;
      "Description" : "Username for MySQL database access",&#13;
      "Type": "String",&#13;
      "MinLength": "1",&#13;
      "MaxLength": "16",&#13;
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",&#13;
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."&#13;
    },&#13;
&#13;
    "DBPassword": {&#13;
      "NoEcho": "true",&#13;
      "Description" : "Password for MySQL database access",&#13;
      "Type": "String",&#13;
      "MinLength": "1",&#13;
      "MaxLength": "41",&#13;
      "AllowedPattern" : "[a-zA-Z0-9]*",&#13;
      "ConstraintDescription" : "must contain only alphanumeric characters."&#13;
    },&#13;
&#13;
    "DBRootPassword": {&#13;
      "NoEcho": "true",&#13;
      "Description" : "Root password for MySQL",&#13;
      "Type": "String",&#13;
      "MinLength": "1",&#13;
      "MaxLength": "41",&#13;
      "AllowedPattern" : "[a-zA-Z0-9]*",&#13;
      "ConstraintDescription" : "must contain only alphanumeric characters."&#13;
    },&#13;
&#13;
    "InstanceType" : {&#13;
      "Description" : "WebServer EC2 instance type",&#13;
      "Type" : "String",&#13;
      "Default" : "t2.small",&#13;
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]&#13;
,&#13;
      "ConstraintDescription" : "must be a valid EC2 instance type."&#13;
    },&#13;
&#13;
    "SSHLocation" : {&#13;
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",&#13;
      "Type": "String",&#13;
      "MinLength": "9",&#13;
      "MaxLength": "18",&#13;
      "Default": "0.0.0.0/0",&#13;
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",&#13;
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."&#13;
    } &#13;
  },&#13;
  &#13;
  "Mappings" : {&#13;
    "AWSInstanceType2Arch" : {&#13;
      "t1.micro"    : { "Arch" : "HVM64"  },&#13;
      "t2.nano"     : { "Arch" : "HVM64"  },&#13;
      "t2.micro"    : { "Arch" : "HVM64"  },&#13;
      "t2.small"    : { "Arch" : "HVM64"  },&#13;
      "t2.medium"   : { "Arch" : "HVM64"  },&#13;
      "t2.large"    : { "Arch" : "HVM64"  },&#13;
      "m1.small"    : { "Arch" : "HVM64"  },&#13;
      "m1.medium"   : { "Arch" : "HVM64"  },&#13;
      "m1.large"    : { "Arch" : "HVM64"  },&#13;
      "m1.xlarge"   : { "Arch" : "HVM64"  },&#13;
      "m2.xlarge"   : { "Arch" : "HVM64"  },&#13;
      "m2.2xlarge"  : { "Arch" : "HVM64"  },&#13;
      "m2.4xlarge"  : { "Arch" : "HVM64"  },&#13;
      "m3.medium"   : { "Arch" : "HVM64"  },&#13;
      "m3.large"    : { "Arch" : "HVM64"  },&#13;
      "m3.xlarge"   : { "Arch" : "HVM64"  },&#13;
      "m3.2xlarge"  : { "Arch" : "HVM64"  },&#13;
      "m4.large"    : { "Arch" : "HVM64"  },&#13;
      "m4.xlarge"   : { "Arch" : "HVM64"  },&#13;
      "m4.2xlarge"  : { "Arch" : "HVM64"  },&#13;
      "m4.4xlarge"  : { "Arch" : "HVM64"  },&#13;
      "m4.10xlarge" : { "Arch" : "HVM64"  },&#13;
      "c1.medium"   : { "Arch" : "HVM64"  },&#13;
      "c1.xlarge"   : { "Arch" : "HVM64"  },&#13;
      "c3.large"    : { "Arch" : "HVM64"  },&#13;
      "c3.xlarge"   : { "Arch" : "HVM64"  },&#13;
      "c3.2xlarge"  : { "Arch" : "HVM64"  },&#13;
      "c3.4xlarge"  : { "Arch" : "HVM64"  },&#13;
      "c3.8xlarge"  : { "Arch" : "HVM64"  },&#13;
      "c4.large"    : { "Arch" : "HVM64"  },&#13;
      "c4.xlarge"   : { "Arch" : "HVM64"  },&#13;
      "c4.2xlarge"  : { "Arch" : "HVM64"  },&#13;
      "c4.4xlarge"  : { "Arch" : "HVM64"  },&#13;
      "c4.8xlarge"  : { "Arch" : "HVM64"  },&#13;
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },&#13;
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },&#13;
      "r3.large"    : { "Arch" : "HVM64"  },&#13;
      "r3.xlarge"   : { "Arch" : "HVM64"  },&#13;
      "r3.2xlarge"  : { "Arch" : "HVM64"  },&#13;
      "r3.4xlarge"  : { "Arch" : "HVM64"  },&#13;
      "r3.8xlarge"  : { "Arch" : "HVM64"  },&#13;
      "i2.xlarge"   : { "Arch" : "HVM64"  },&#13;
      "i2.2xlarge"  : { "Arch" : "HVM64"  },&#13;
      "i2.4xlarge"  : { "Arch" : "HVM64"  },&#13;
      "i2.8xlarge"  : { "Arch" : "HVM64"  },&#13;
      "d2.xlarge"   : { "Arch" : "HVM64"  },&#13;
      "d2.2xlarge"  : { "Arch" : "HVM64"  },&#13;
      "d2.4xlarge"  : { "Arch" : "HVM64"  },&#13;
      "d2.8xlarge"  : { "Arch" : "HVM64"  },&#13;
      "hi1.4xlarge" : { "Arch" : "HVM64"  },&#13;
      "hs1.8xlarge" : { "Arch" : "HVM64"  },&#13;
      "cr1.8xlarge" : { "Arch" : "HVM64"  },&#13;
      "cc2.8xlarge" : { "Arch" : "HVM64"  }&#13;
    },&#13;
&#13;
    "AWSInstanceType2NATArch" : {&#13;
      "t1.micro"    : { "Arch" : "NATHVM64"  },&#13;
      "t2.nano"     : { "Arch" : "NATHVM64"  },&#13;
      "t2.micro"    : { "Arch" : "NATHVM64"  },&#13;
      "t2.small"    : { "Arch" : "NATHVM64"  },&#13;
      "t2.medium"   : { "Arch" : "NATHVM64"  },&#13;
      "t2.large"    : { "Arch" : "NATHVM64"  },&#13;
      "m1.small"    : { "Arch" : "NATHVM64"  },&#13;
      "m1.medium"   : { "Arch" : "NATHVM64"  },&#13;
      "m1.large"    : { "Arch" : "NATHVM64"  },&#13;
      "m1.xlarge"   : { "Arch" : "NATHVM64"  },&#13;
      "m2.xlarge"   : { "Arch" : "NATHVM64"  },&#13;
      "m2.2xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "m2.4xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "m3.medium"   : { "Arch" : "NATHVM64"  },&#13;
      "m3.large"    : { "Arch" : "NATHVM64"  },&#13;
      "m3.xlarge"   : { "Arch" : "NATHVM64"  },&#13;
      "m3.2xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "m4.large"    : { "Arch" : "NATHVM64"  },&#13;
      "m4.xlarge"   : { "Arch" : "NATHVM64"  },&#13;
      "m4.2xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "m4.4xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "m4.10xlarge" : { "Arch" : "NATHVM64"  },&#13;
      "c1.medium"   : { "Arch" : "NATHVM64"  },&#13;
      "c1.xlarge"   : { "Arch" : "NATHVM64"  },&#13;
      "c3.large"    : { "Arch" : "NATHVM64"  },&#13;
      "c3.xlarge"   : { "Arch" : "NATHVM64"  },&#13;
      "c3.2xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "c3.4xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "c3.8xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "c4.large"    : { "Arch" : "NATHVM64"  },&#13;
      "c4.xlarge"   : { "Arch" : "NATHVM64"  },&#13;
      "c4.2xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "c4.4xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "c4.8xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },&#13;
      "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },&#13;
      "r3.large"    : { "Arch" : "NATHVM64"  },&#13;
      "r3.xlarge"   : { "Arch" : "NATHVM64"  },&#13;
      "r3.2xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "r3.4xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "r3.8xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "i2.xlarge"   : { "Arch" : "NATHVM64"  },&#13;
      "i2.2xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "i2.4xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "i2.8xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "d2.xlarge"   : { "Arch" : "NATHVM64"  },&#13;
      "d2.2xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "d2.4xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "d2.8xlarge"  : { "Arch" : "NATHVM64"  },&#13;
      "hi1.4xlarge" : { "Arch" : "NATHVM64"  },&#13;
      "hs1.8xlarge" : { "Arch" : "NATHVM64"  },&#13;
      "cr1.8xlarge" : { "Arch" : "NATHVM64"  },&#13;
      "cc2.8xlarge" : { "Arch" : "NATHVM64"  }&#13;
    }&#13;
,&#13;
    "AWSRegionArch2AMI" : {&#13;
      "af-south-1"       : {"HVM64" : "ami-064cc455f8a1ef504", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "ap-east-1"        : {"HVM64" : "ami-f85b1989", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "ap-northeast-1"   : {"HVM64" : "ami-0b2c2a754d5b4da22", "HVMG2" : "ami-09d0e0e099ecabba2"},&#13;
      "ap-northeast-2"   : {"HVM64" : "ami-0493ab99920f410fc", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "ap-northeast-3"   : {"HVM64" : "ami-01344f6f63a4decc1", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "ap-south-1"       : {"HVM64" : "ami-03cfb5e1fb4fac428", "HVMG2" : "ami-0244c1d42815af84a"},&#13;
      "ap-southeast-1"   : {"HVM64" : "ami-0ba35dc9caf73d1c7", "HVMG2" : "ami-0e46ce0d6a87dc979"},&#13;
      "ap-southeast-2"   : {"HVM64" : "ami-0ae99b503e8694028", "HVMG2" : "ami-0c0ab057a101d8ff2"},&#13;
      "ca-central-1"     : {"HVM64" : "ami-0803e21a2ec22f953", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "cn-north-1"       : {"HVM64" : "ami-07a3f215cc90c889c", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "cn-northwest-1"   : {"HVM64" : "ami-0a3b3b10f714a0ff4", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "eu-central-1"     : {"HVM64" : "ami-0474863011a7d1541", "HVMG2" : "ami-0aa1822e3eb913a11"},&#13;
      "eu-north-1"       : {"HVM64" : "ami-0de4b8910494dba0f", "HVMG2" : "ami-32d55b4c"},&#13;
      "eu-south-1"       : {"HVM64" : "ami-08427144fe9ebdef6", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "eu-west-1"        : {"HVM64" : "ami-015232c01a82b847b", "HVMG2" : "ami-0d5299b1c6112c3c7"},&#13;
      "eu-west-2"        : {"HVM64" : "ami-0765d48d7e15beb93", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "eu-west-3"        : {"HVM64" : "ami-0caf07637eda19d9c", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "me-south-1"       : {"HVM64" : "ami-0744743d80915b497", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "sa-east-1"        : {"HVM64" : "ami-0a52e8a6018e92bb0", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "us-east-1"        : {"HVM64" : "ami-032930428bf1abbff", "HVMG2" : "ami-0aeb704d503081ea6"},&#13;
      "us-east-2"        : {"HVM64" : "ami-027cab9a7bf0155df", "HVMG2" : "NOT_SUPPORTED"},&#13;
      "us-west-1"        : {"HVM64" : "ami-088c153f74339f34c", "HVMG2" : "ami-0a7fc72dc0e51aa77"},&#13;
      "us-west-2"        : {"HVM64" : "ami-01fee56b22f308154", "HVMG2" : "ami-0fe84a5b4563d8f27"}&#13;
    }&#13;
&#13;
  },&#13;
    &#13;
  "Resources" : {     &#13;
      &#13;
    "WebServerInstance": {  &#13;
      "Type": "AWS::EC2::Instance",&#13;
      "Metadata" : {&#13;
        "AWS::CloudFormation::Init" : {&#13;
          "configSets" : {&#13;
            "InstallAndRun" : [ "Install", "Configure" ]&#13;
          },&#13;
&#13;
          "Install" : {&#13;
            "packages" : {&#13;
              "yum" : {&#13;
                "mysql"        : [],&#13;
                "mysql-server" : [],&#13;
                "mysql-libs"   : [],&#13;
                "httpd"        : [],&#13;
                "php"          : [],&#13;
                "php-mysql"    : []&#13;
              }&#13;
            },&#13;
&#13;
            "files" : {&#13;
              "/var/www/html/index.php" : {&#13;
                "content" : { "Fn::Join" : [ "", [&#13;
                  "&lt;html&gt;\n",&#13;
                  "  &lt;head&gt;\n",&#13;
                  "    &lt;title&gt;AWS CloudFormation PHP Sample&lt;/title&gt;\n",&#13;
                  "    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\"&gt;\n",&#13;
                  "  &lt;/head&gt;\n",&#13;
                  "  &lt;body&gt;\n",&#13;
                  "    &lt;h1&gt;Welcome to the AWS CloudFormation PHP Sample&lt;/h1&gt;\n",&#13;
                  "    &lt;p/&gt;\n",&#13;
                  "    &lt;?php\n",&#13;
                  "      // Print out the current data and time\n",&#13;
                  "      print \"The Current Date and Time is: &lt;br/&gt;\";\n",&#13;
                  "      print date(\"g:i A l, F j Y.\");\n",&#13;
                  "    ?&gt;\n",&#13;
                  "    &lt;p/&gt;\n",&#13;
                  "    &lt;?php\n",&#13;
                  "      // Setup a handle for CURL\n",&#13;
                  "      $curl_handle=curl_init();\n",&#13;
                  "      curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);\n",&#13;
                  "      curl_setopt($curl_handle,CURLOPT_RETURNTRANSFER,1);\n",&#13;
                  "      // Get the hostname of the intance from the instance metadata\n",&#13;
                  "      curl_setopt($curl_handle,CURLOPT_URL,'http://169.254.169.254/latest/meta-data/public-hostname');\n",&#13;
                  "      $hostname = curl_exec($curl_handle);\n",&#13;
                  "      if (empty($hostname))\n",&#13;
                  "      {\n",&#13;
                  "        print \"Sorry, for some reason, we got no hostname back &lt;br /&gt;\";\n",&#13;
                  "      }\n",&#13;
                  "      else\n",&#13;
                  "      {\n",&#13;
                  "        print \"Server = \" . $hostname . \"&lt;br /&gt;\";\n",&#13;
                  "      }\n",&#13;
                  "      // Get the instance-id of the intance from the instance metadata\n",&#13;
                  "      curl_setopt($curl_handle,CURLOPT_URL,'http://169.254.169.254/latest/meta-data/instance-id');\n",&#13;
                  "      $instanceid = curl_exec($curl_handle);\n",&#13;
                  "      if (empty($instanceid))\n",&#13;
                  "      {\n",&#13;
                  "        print \"Sorry, for some reason, we got no instance id back &lt;br /&gt;\";\n",&#13;
                  "      }\n",&#13;
                  "      else\n",&#13;
                  "      {\n",&#13;
                  "        print \"EC2 instance-id = \" . $instanceid . \"&lt;br /&gt;\";\n",&#13;
                  "      }\n",&#13;
                  "      $Database   = \"localhost\";\n",&#13;
                  "      $DBUser     = \"", {"Ref" : "DBUser"}, "\";\n",&#13;
                  "      $DBPassword = \"", {"Ref" : "DBPassword"}, "\";\n",&#13;
                  "      print \"Database = \" . $Database . \"&lt;br /&gt;\";\n",&#13;
                  "      $dbconnection = mysql_connect($Database, $DBUser, $DBPassword)\n",&#13;
                  "                      or die(\"Could not connect: \" . mysql_error());\n",&#13;
                  "      print (\"Connected to $Database successfully\");\n",&#13;
                  "      mysql_close($dbconnection);\n",&#13;
                  "    ?&gt;\n",&#13;
                  "    &lt;h2&gt;PHP Information&lt;/h2&gt;\n",&#13;
                  "    &lt;p/&gt;\n",&#13;
                  "    &lt;?php\n",&#13;
                  "      phpinfo();\n",&#13;
                  "    ?&gt;\n",&#13;
                  "  &lt;/body&gt;\n",&#13;
                  "&lt;/html&gt;\n"&#13;
                ]]},&#13;
                "mode"  : "000600",&#13;
                "owner" : "apache",&#13;
                "group" : "apache"&#13;
              },&#13;
&#13;
              "/tmp/setup.mysql" : {&#13;
                "content" : { "Fn::Join" : ["", [&#13;
                  "CREATE DATABASE ", { "Ref" : "DBName" }, ";\n",&#13;
                  "GRANT ALL ON ", { "Ref" : "DBName" }, ".* TO '", { "Ref" : "DBUser" }, "'@localhost IDENTIFIED BY '", { "Ref" : "DBPassword" }, "';\n"&#13;
                  ]]},&#13;
                "mode"  : "000400",&#13;
                "owner" : "root",&#13;
                "group" : "root"&#13;
              },&#13;
              "/etc/cfn/cfn-hup.conf" : {&#13;
                "content" : { "Fn::Join" : ["", [&#13;
                  "[main]\n",&#13;
                  "stack=", { "Ref" : "AWS::StackId" }, "\n",&#13;
                  "region=", { "Ref" : "AWS::Region" }, "\n"&#13;
                ]]},&#13;
                "mode"    : "000400",&#13;
                "owner"   : "root",&#13;
                "group"   : "root"&#13;
              },&#13;
&#13;
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {&#13;
                "content": { "Fn::Join" : ["", [&#13;
                  "[cfn-auto-reloader-hook]\n",&#13;
                  "triggers=post.update\n",&#13;
                  "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",&#13;
                  "action=/opt/aws/bin/cfn-init -v ",&#13;
                  "         --stack ", { "Ref" : "AWS::StackName" },&#13;
                  "         --resource WebServerInstance ",&#13;
                  "         --configsets InstallAndRun ",&#13;
                  "         --region ", { "Ref" : "AWS::Region" }, "\n",&#13;
                  "runas=root\n"&#13;
                ]]},&#13;
                "mode"    : "000400",&#13;
                "owner"   : "root",&#13;
                "group"   : "root"&#13;
              }&#13;
            },&#13;
&#13;
            "services" : {&#13;
              "sysvinit" : {  &#13;
                "mysqld"  : { "enabled" : "true", "ensureRunning" : "true" },&#13;
                "httpd"   : { "enabled" : "true", "ensureRunning" : "true" },&#13;
                "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",&#13;
                              "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}&#13;
              }&#13;
            }&#13;
          },&#13;
&#13;
          "Configure" : {&#13;
            "commands" : {&#13;
              "01_set_mysql_root_password" : {&#13;
                "command" : { "Fn::Join" : ["", ["mysqladmin -u root password '", { "Ref" : "DBRootPassword" }, "'"]]},&#13;
                "test" : { "Fn::Join" : ["", ["$(mysql ", { "Ref" : "DBName" }, " -u root --password='", { "Ref" : "DBRootPassword" }, "' &gt;/dev/null 2&gt;&amp;1 &lt;/dev/null); (( $? != 0 ))"]]}&#13;
              },&#13;
              "02_create_database" : {&#13;
                "command" : { "Fn::Join" : ["", ["mysql -u root --password='", { "Ref" : "DBRootPassword" }, "' &lt; /tmp/setup.mysql"]]},&#13;
                "test" : { "Fn::Join" : ["", ["$(mysql ", { "Ref" : "DBName" }, " -u root --password='", { "Ref" : "DBRootPassword" }, "' &gt;/dev/null 2&gt;&amp;1 &lt;/dev/null); (( $? != 0 ))"]]}&#13;
              }&#13;
            }&#13;
          }&#13;
        }&#13;
      },&#13;
      "Properties": {&#13;
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },&#13;
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },&#13;
        "InstanceType"   : { "Ref" : "InstanceType" },&#13;
        "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],&#13;
        "KeyName"        : { "Ref" : "KeyName" },&#13;
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [&#13;
             "#!/bin/bash -xe\n",&#13;
             "yum update -y aws-cfn-bootstrap\n",&#13;
&#13;
             "# Install the files and packages from the metadata\n",&#13;
             "/opt/aws/bin/cfn-init -v ",&#13;
             "         --stack ", { "Ref" : "AWS::StackName" },&#13;
             "         --resource WebServerInstance ",&#13;
             "         --configsets InstallAndRun ",&#13;
             "         --region ", { "Ref" : "AWS::Region" }, "\n",&#13;
&#13;
             "# Signal the status from cfn-init\n",&#13;
             "/opt/aws/bin/cfn-signal -e $? ",&#13;
             "         --stack ", { "Ref" : "AWS::StackName" },&#13;
             "         --resource WebServerInstance ",&#13;
             "         --region ", { "Ref" : "AWS::Region" }, "\n"&#13;
        ]]}}        &#13;
      },&#13;
      "CreationPolicy" : {&#13;
        "ResourceSignal" : {&#13;
          "Timeout" : "PT5M"&#13;
        }&#13;
      }&#13;
    },&#13;
    &#13;
    "WebServerSecurityGroup" : {&#13;
      "Type" : "AWS::EC2::SecurityGroup",&#13;
      "Properties" : {&#13;
        "GroupDescription" : "Enable HTTP access via port 80",&#13;
        "SecurityGroupIngress" : [&#13;
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},&#13;
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}&#13;
        ]&#13;
      }      &#13;
    }          &#13;
  },&#13;
  &#13;
  "Outputs" : {&#13;
    "WebsiteURL" : {&#13;
      "Description" : "URL for newly created LAMP stack",&#13;
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServerInstance", "PublicDnsName" ]}]] }&#13;
    }&#13;
  }&#13;
}&#13;
</body>
        <cloud_template_url/>
        <config_installable/>
        <config_installable_name/>
        <format display_value="JSON">f1bd5cb0875f13008de7483cf6cb0bca</format>
        <ingestion_method>body</ingestion_method>
        <short_description/>
        <state>published</state>
        <status>success</status>
        <status_message>Template is valid and saved.</status_message>
        <sys_class_name>sn_cmp_cloud_template_version</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-04-18 15:17:16</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>995402d91b12a910c5ba97d7bd4bcb09</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>1</sys_name>
        <sys_package display_value="GeneralUtils" source="0e3338441b18811001e40d82604bcbd3">0e3338441b18811001e40d82604bcbd3</sys_package>
        <sys_policy/>
        <sys_scope display_value="GeneralUtils">0e3338441b18811001e40d82604bcbd3</sys_scope>
        <sys_update_name>sn_cmp_cloud_template_version_995402d91b12a910c5ba97d7bd4bcb09</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-18 15:18:42</sys_updated_on>
        <template display_value="New AWS LAMP Stack">2b448e991b12a910c5ba97d7bd4bcb28</template>
        <version>1</version>
    </sn_cmp_cloud_template_version>
</record_update>
