<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Demo Multi-MRVS">03ef5919c3e721107c4039af0501312f</cat_item>
        <cat_variable/>
        <condition/>
        <description>Add a listener to the VM MRVS and respond to any changes. &#13;
If a change is made, update the Disks MRVS to remove any VM #'s that no longer exist</description>
        <field/>
        <global>true</global>
        <isolate_script>false</isolate_script>
        <messages/>
        <name>Observe VM Data</name>
        <order/>
        <published_ref/>
        <script><![CDATA[function onLoad() {

    setTimeout(function () {
        var mrvs = new MRVSUtils('virtual_machine');
        var observer = new MutationObserver(function (mutationList, observer) {
            console.log(mutationList)
            var modifiedData = mrvs.processMutations(mutationList);
            console.log(JSON.stringify(modifiedData, '', 3));

            if (modifiedData.removed) {
                var vmList = modifiedData.removed.map(function (_x) {
                    return _x["VM #"];
                });

                // get current disks and filter out any that belong to VM's that no longer exist
                var diskList = JSON.parse(g_form.getValue('disks'));
                diskList = diskList.filter(function (_x) {
                    return vmList.indexOf(_x.disk_vm_number) == -1;
                });
                g_form.setValue("disks", JSON.stringify(diskList));

            }

        });

        // create the observer looking for changes to the contents of the MRVS
        observer.observe($(mrvs.getTableID()), MRVSUtils.OBSERVER_CONFIG);

    }, 1000);

}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-20 13:46:44</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>889b862dc3ab61107c4039af0501317c</sys_id>
        <sys_mod_count>106</sys_mod_count>
        <sys_name>Observe VM Data</sys_name>
        <sys_overrides/>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="GeneralUtils">0e3338441b18811001e40d82604bcbd3</sys_scope>
        <sys_update_name>catalog_script_client_889b862dc3ab61107c4039af0501317c</sys_update_name>
        <sys_updated_by>aidan.cooper</sys_updated_by>
        <sys_updated_on>2023-10-16 09:59:32</sys_updated_on>
        <table/>
        <type>onLoad</type>
        <ui_type>0</ui_type>
        <variable_set/>
        <view/>
    </catalog_script_client>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="GeneralUtils">0e3338441b18811001e40d82604bcbd3</claim_owner_scope>
        <claim_timestamp>18ad2332ff40000001</claim_timestamp>
        <metadata_update_name>catalog_script_client_889b862dc3ab61107c4039af0501317c</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>GeneralUtils</previous_claim_name>
        <previous_claim_scope>0e3338441b18811001e40d82604bcbd3</previous_claim_scope>
        <sys_created_by>aidan.cooper</sys_created_by>
        <sys_created_on>2023-09-26 15:54:44</sys_created_on>
        <sys_id>a8e497814769b95001612c44846d435f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>aidan.cooper</sys_updated_by>
        <sys_updated_on>2023-09-26 15:54:44</sys_updated_on>
    </sys_claim>
</record_update>
